.row
  .col-xs-12.col-xl-8
    .row
      .col-xs-12.col-sm-6
        .form-group
          = f.label :check_in
          = f.date_field :check_in, {class: 'form-control select-checkin', value: @customer.check_in.present? ? @customer.check_in.strftime('%Y-%m-%d') : Time.now.strftime('%Y-%m-%d')}
      .col-xs-12.col-sm-6
        .form-group
          = f.label :check_out
          = f.date_field :check_out, {class: 'form-control select-checkout', value: @customer.check_out.present? ? @customer.check_out.strftime('%Y-%m-%d') : (Time.now + 5.days).strftime('%Y-%m-%d')}

    .row
      .col-xs-12.col-sm-6
        .form-group
          = f.label :email_template_id
          = f.collection_select :email_template_id, @templates, :id, :to_s, {include_blank: t("select template for e-mail")}, {class: 'form-control c-select'}
      .col-xs-12.col-sm-6
        .form-group
          = f.label :print_template_id
          = f.collection_select :print_template_id, @templates, :id, :to_s, {include_blank: t("select template to print")}, {class: 'form-control c-select'}

#js-items-table.invoice-table
  = f.fields_for :customer_items, include_id: false  do |item_form|
    = render partial: 'item_fields', locals: {f: item_form}
.row
  .col-xs-12.col-sm-6.col-md-7.col-lg-8
    .invoice-table-actions
      = link_to_add_association t("add line"), f, :customer_items,       |
        'data-association-insertion-node' => '#js-items-table', |
        'data-association-insertion-method' => 'append',        |
        :partial => 'item_fields',                       |
        :class => 'btn btn-secondary add-line'                           |
  .col-xs-12.col-sm-6.col-md-5.col-lg-4
    #amounts.invoice-amounts
      %table.table
        %tr
          %th{scope: "row"} #{t("subtotal")}:
          %td#subtotal$ 0
      %table.table#tax-table
      %table.table
        %tr
          %th{scope: "row"} Service charge:
          %td#service-tax$ 0
        %tr
          %th{scope: "row"} T-GST:
          %td#gov-tax$ 0
        %tr
          %th{scope: "row"} Green tax:
          %td#green-tax$ 0
        %tr.amounts-total
          %th{scope: "row"} #{t("total")}:
          %td#total-amount$ 0


:javascript
  function addTax() {
    const tax_arr = {}
    $(".tax-select-bed").each(function() {
      let ids = $(this).val()
      let parent = $(this).closest(".invoice-row")
      let net = $(parent).find(".invoice-col .net-amount-bed")
      if(ids != null) {
        for (let i = 0; i < ids.length; i++) {
          if (!(ids[i].split('_')[2] in tax_arr)) tax_arr[ids[i].split('_')[2]] = 0
          tax_arr[ids[i].split('_')[2]] += parseFloat(ids[i].split('_')[1]) * parseFloat($(net).val()) / 100
        }
      }
    });
    changeTax(tax_arr)
  }
  function changeTax(tax_arr) {
    $("#tax-table tr").remove();
    for (var i in tax_arr) { $("#tax-table").append("<tr><th>"+i+":</th><td>$ <span class='tax-value'>"+parseFloat(tax_arr[i]).toFixed(2)+"</span></td></tr>")}
  }
  function getDateDiff() {
    let a = new Date($(".select-checkin").val());
    let b = new Date($(".select-checkout").val());
    let c = (b - a)/(1000 * 3600 * 24)
    return c
  }
  function triggerRoom() {
    $(".room-select").each(function() {
      changeNet(this)
    })
  }
  function changeAllQuantityBed(val) {
    $(".quantity-bed").each(function() {
      $(this).val(val)
    })
    triggerRoom()
  }
  function changeLastQuantityBed(val) {
    $(".quantity-bed").last().val(val)
    triggerRoom()
  }
  $(".select-checkin").change(function() {
    let val = getDateDiff();
    changeAllQuantityBed(val)
  });
  $(".select-checkout").change(function() {
    let val = getDateDiff();
    changeAllQuantityBed(val)
  });
  $(document).ready(function() {
    let val = getDateDiff();
    changeAllQuantityBed(val)
    if(window.location.href.includes("edit")) {
      let href = window.location.pathname
      let thenum = href.replace( /^\D+/g, '');
      let id = parseInt(thenum)
      $.ajax({
        method: "GET",
        url: "/customer/update_content",
        data: { id: id }
        })
      .success(function( msg ) {
        for(let i = 0; i < msg.data.length; i++) {
          console.log(msg.data[i].net_amount)
          $($(".quantity-bed")[i]).val(msg.data[i].quantity)
          $($(".js-net-amount-bed")[i]).text(msg.data[i].net_amount)
          $($(".net-amount-bed")[i]).val(msg.data[i].net_amount)
          $($(".unitary-cost-bed")[i]).val(msg.data[i].unitary_cost)
          $($(".discount-bed")[i]).val(msg.data[i].discount)
          $($(".room-number")[i]).val(msg.data[i].room_number)
          $($(".no-bed")[i]).val(parseInt(msg.data[i].quantity_bed) || 1)
        }

        for(let i = 0; i < msg.tax.length; i++) {
          $($(".tax-select-bed")[i]).val(msg.tax[i])
          $($(".tax-select-bed")[i]).trigger('change')
        }
        addTax();
        
        $($(".meal-select")[0]).val(msg.meal.split(','))
        $($(".meal-select")[0]).trigger('change')
        changeTotal();
      });

    } else {
      let self = $(".room-select")
      let id = $(self).val()
      let parent = $(self).parent();
      let grand = $(parent).parent();
      let bed = $(grand).find(".invoice-col .bed-select")
      $.ajax({
        method: "GET",
        url: "/bed/update_bed",
        data: { room_id: id }
      })
      .success(function( msg ) {
        json = JSON.stringify(msg)
        $(bed).find('option').remove()
        for (let i = 0; i < msg.beds.length; i++) {
          $(bed).append(new Option(msg.beds[i].name, msg.beds[i].id));
        }
        changeNet(self)
      });
    }
  });